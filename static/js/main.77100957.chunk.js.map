{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","href","onClick","title","content","App","useState","setSelectedTabId","isActive","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAO,SAAC,GAEJ,IADfC,EACc,EADdA,KAAMC,EACQ,EADRA,cAAeC,EACP,EADOA,cAEfC,EAAcH,EACjBI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEjD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACEE,UAAWJ,EAAYG,KAAOD,EAAIC,GAAK,YAAc,GACrD,UAAQ,MAFV,SAKE,mBACEG,KAAI,WAAMJ,EAAIC,IACd,UAAQ,UACRI,QAAS,WACHP,EAAYG,KAAOD,EAAIC,IACzBJ,EAAcG,IALpB,SASGA,EAAIM,SAXFN,EAAIC,WAkBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYS,cClCRZ,EAAO,CAClB,CAAEM,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASd,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBc,EAAtB,KAMMC,EAAWhB,EAAKI,MAAK,SAAAC,GAAG,OAAIJ,IAAkBI,EAAIC,MAExD,OACE,sBAAKC,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,0CACsBS,QADtB,IACsBA,OADtB,EACsBA,EAAUL,SAGhC,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAeA,EACfC,cAfgB,SAACG,GACrBU,EAAiBV,EAAIC,WCdzBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.77100957.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ntype TabProps = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs = ({\n  tabs, selectedTabId, onTabSelected,\n}: TabProps) => {\n  const selectedTab = tabs\n    .find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={selectedTab.id === tab.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (selectedTab.id !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './types/Tab';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const isActive = tabs.find(tab => selectedTabId === tab.id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${isActive?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}